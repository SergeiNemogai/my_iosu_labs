/* 
Написать процедуру, которая за указанный период определяет 
для указанного вида техники количество предоставлений и
перечень произведённых работ. В качестве параметра передать
идентификатор техники, начальную и конечную дату периода. 
Пример: id = 94, период: с '04-APR-18' до '04-APR-20'
*/

CREATE OR REPLACE PROCEDURE 
PROVISION_FOR_PERIOD(FROM_DATE IN DATE, TO_DATE IN DATE, TECH_ID IN INTEGER) IS
CURSOR WORKS_LIST IS 
SELECT W.wname
FROM Technics T
INNER JOIN Provision P ON T.snumber = P.snumber
INNER JOIN Works W ON P.wcode = W.wcode
WHERE T.snumber = TECH_ID
AND P.rdate BETWEEN FROM_DATE AND TO_DATE;
INVALID_ID_EXCEPTION EXCEPTION;
INVALID_DATE_EXCEPTION EXCEPTION;
NO_DATA_FOUND_EXCEPTION EXCEPTION;
COUNTER INTEGER := 0;
BEGIN
	IF TECH_ID <= 0 THEN 
		RAISE INVALID_ID_EXCEPTION;
	END IF;
    
    IF FROM_DATE > TO_DATE THEN
		RAISE INVALID_DATE_EXCEPTION
	END IF;
    
	FOR WORK_NAME IN WORKS_LIST
    LOOP
		DBMS_OUTPUT.PUT_LINE('WORK NAME: ' || WORK_NAME.wname);
        COUNTER := COUNTER + 1;
    END LOOP;
    
    IF COUNTER > 0 THEN
		DBMS_OUTPUT.PUT_LINE('NUMBER OF PROVISIONS: ' || COUNTER);
	ELSE
		RAISE NO_DATA_FOUND_EXCEPTION;
	END IF;
    
    EXCEPTION
		WHEN INVALID_ID_EXCEPTION THEN 
			DBMS_OUTPUT.PUT_LINE('ID MUST BE POSITIVE');
		WHEN INVALID_DATE_EXCEPTION THEN 
			DBMS_OUTPUT.PUT_LINE('FROM_DATE CANNOT BE GREATER THAN TO_DATE');
		WHEN NO_DATA_FOUND_EXCEPTION THEN 
			DBMS_OUTPUT.PUT_LINE('REQURIED DATA DOESNT EXIST');
		WHEN OTHERS 
			DBMS_OUTPUT.PUT_LINE('IF YOU READING THAT YOU MADE A FATAL MISTAKE');
END;
/

-- Корректные данные
BEGIN 
PROVISION_FOR_PERIOD('04-APR-15', '04-APR-20', 1); 
END;
/

-- Интервал задан неверно
BEGIN 
PROVISION_FOR_PERIOD('04-APR-21', '04-APR-20', 1); 
END;
/ 

-- Некорретный id
BEGIN 
PROVISION_FOR_PERIOD('04-APR-15', '04-APR-20', -1); 
END; 
/

-- Данные отсутствуют
BEGIN 
PROVISION_FOR_PERIOD('04-APR-20', '04-APR-20', 1); 
END; 
/

/* 
Создать функцию, которая выводит количество техники,
произведённой в этом году.
*/

CREATE OR REPLACE FUNCTION NUM_OF_TECH RETURN INTEGER IS
CURSOR TECH IS SELECT * FROM Technics WHERE TO_CHAR(rdate, 'yyyy') = (SELECT (TO_CHAR(sysdate,'yyyy')) FROM dual);
TECH_LIST TECH%ROWTYPE;
COUNTER INTEGER := 0;
NO_DATA_FOUND_EXCEPTION EXCEPTION;
BEGIN
	OPEN TECH;
    FETCH TECH INTO TECH_LIST;
    
    WHILE TECH%FOUND
    LOOP
		COUNTER := COUNTER + 1;
        FETCH TECH INTO TECH_LIST;
    END LOOP;
    
    CLOSE TECH;
    
    IF COUNTER > 0 THEN
        RETURN COUNTER;
	ELSE
		RAISE NO_DATA_FOUND_EXCEPTION;
	END IF;
    
    EXCEPTION
		WHEN NO_DATA_FOUND_EXCEPTION THEN 
			DBMS_OUTPUT.PUT_LINE('REQURIED DATA DOESNT EXIST');
            RETURN -1;
END;
/

-- Вызов функции

BEGIN
DBMS_OUTPUT.PUT_LINE('Number of technics: ' || NUM_OF_TECH());
END;
/